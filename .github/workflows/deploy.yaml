name: 숨다 FE prod 서버, 빌드 후 EC2로 배포

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 클론
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      # 2. Node.js 설정
      - name: Node.js 설치
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      # 3. 의존성 설치
      - name: 의존성 설치
        run: |
          echo "의존성 설치 시작"
          npm install
          echo "의존성 설치 완료"

      # 4. 빌드 수행
      - name: 빌드
        run: |
          echo "빌드 시작"
          npm run build
          echo "빌드 완료"

      # 5. SSH 디렉토리 생성 및 EC2 서버의 호스트 키 등록
      - name: EC2 호스트 등록
        run: |
          echo "EC2 호스트 등록 시작"
          mkdir -p ~/.ssh  # ~/.ssh 디렉토리 생성
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts  # EC2 호스트 키 추가
          echo "EC2 호스트 등록 완료"

      # 6. SSH 키 설정 및 에이전트에 추가
      - name: SSH 키 설정
        run: |
          echo "SSH 키 설정 시작"
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa  # 적절한 권한 설정
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          echo "SSH 키 설정 완료"

      # 7. EC2 서버의 임시 디렉토리에 빌드된 파일 전송
      - name: 빌드된 파일을 EC2의 임시 디렉토리로 전송
        run: |
          echo "EC2 서버로 빌드된 파일 전송 시작"
          scp -r ./build/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/build/
          echo "EC2 서버로 빌드된 파일 전송 완료"

      # 8. EC2 서버에서 /var/www/html로 파일 이동 및 소유자 변경
      - name: EC2 서버의 /var/www/html로 파일 이동 및 소유자 변경
        run: |
          echo "EC2 서버에서 /var/www/html로 파일 이동 시작"
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo mv /home/${{ secrets.EC2_USER }}/build/* /var/www/html/ && sudo chown -R www-data:www-data /var/www/html"
          echo "EC2 서버에서 파일 이동 및 소유자 변경 완료"
