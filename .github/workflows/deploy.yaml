name: React 앱 빌드 및 EC2 배포

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v2

      - name: Node.js 설정
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: npm 캐시 정리 및 종속성 설치
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm ./package-lock.json
          npm install

      - name: .env 파일 생성
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" > .env
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .env
          echo "SENTRY_ORG=${{ secrets.SENTRY_ORG }}" >> .env
          echo "SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}" >> .env

      - name: .env 파일을 EC2로 업로드
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SSH_HOST: ${{ secrets.EC2_HOST }}
          SSH_USER: ${{ secrets.EC2_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no .env ${SSH_USER}@${SSH_HOST}:/var/www/html/.env

      - name: React 앱 빌드
        run: |
          CI=false npm run build

      - name: Sentry 소스맵 업로드
        run: |
          export $(cat .env | xargs)
          npm run sentry:sourcemaps

      - name: React 앱을 EC2로 배포
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SSH_HOST: ${{ secrets.EC2_HOST }}
          SSH_USER: ${{ secrets.EC2_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -r -o StrictHostKeyChecking=no build/* ${SSH_USER}@${SSH_HOST}:/var/www/html/
